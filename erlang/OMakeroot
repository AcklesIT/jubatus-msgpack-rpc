########################################################################
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this file, to deal in the File without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the File, and to permit persons to whom the
# File is furnished to do so, subject to the following condition:
#
# THE FILE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE FILE OR
# THE USE OR OTHER DEALINGS IN THE FILE.

########################################################################
# The standard OMakeroot file.
# You will not normally need to modify this file.
# By default, your changes should be placed in the
# OMakefile in this directory.
#
# If you decide to modify this file, note that it uses exactly
# the same syntax as the OMakefile.
#

#
# Include the standard installed configuration files.
# Any of these can be deleted if you are not using them,
# but you probably want to keep the Common file.
#
open build/C
open build/OCaml
open build/LaTeX

ERLC=$(shell which erlc)
SRCDIR=src
EBIN=ebin
ERLCFLAGS=
ERL=erl

public.BEAM_EXT=.beam
public.ERL_EXT=.erl

public.INCLUDES[] =
public.INCLUDES_OPT = -I
#
# Add the -I option to the includes lazily.
# Don't redefine this variable unless you know what you are doing.
#
public.PREFIXED_INCLUDES = $`(addprefix $(INCLUDES_OPT), $(INCLUDES))

#%$(BEAM_EXT): %$(ERL_EXT) #:scanner: scan-erl-%$(ERL_EXT)
#    $(ERLC) $(ERLCFLAGS) $(PREFIXED_INCLUDES) $<

public.OTPapp(name, files) = 
    private.OFILES = $(addsuffix $(BEAM_EXT), $(files))
    private.NORMALLIB = ebin/$(file $(name).app)
    $(NORMALLIB): $(OFILES)

public.MoveFile(filename, srcdir, destdir)=
    private.DESTFILE = $(file $(destdir)/$(filename))
    private.SRCFILE = $(file $(srcfile)/$(filename))
    $(DESTFILE): $(SRCFILE)
        mv $(SRCFILE) $(DESTFILE)

public.BeamFiles(srcdir)=
    files=$(file $(addsuffix .beam, $(basename $(removesuffix $(glob $(srcdir)/*.erl)))))
    return $(files)

%.beam: %.erl
    $(ERLC) $(ERLCFLAGS) $(PREFIXED_INCLUDES)  $<
#    $(ERLC) $(ERLCFLAGS) $(PREFIXED_INCLUDES) $(array -o) $`(DESTDIR) $<


ROOT=$(shell pwd)
#global.COMMON_TEST_LIB = $(shell erl -noshell -eval 'io:format("~s~n", [code:lib_dir(common_test)]).' -s init stop)
#global.RUN_TEST_CMD = $(COMMON_TEST_LIB)/priv/bin/run_test

#
# The command-line variables are defined *after* the
# standard configuration has been loaded.
#
DefineCommandVars()

#
# Include the OMakefile in this directory.
#
.SUBDIRS: .

# MakeBeams($(names))
# BeamFiles(source_dir, dest_dir)
# .DEFAULT: $(BeamFiles src, ebin)
